# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- demo

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: build
    displayName: Build images
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build Web image
      inputs:
        command: buildAndPush    
        containerRegistry: 'ttl.sh'
        repository: 'slackernews-web'
        dockerfile: '$(Build.SourcesDirectory)/deploy/Dockerfile.web'
        buildContext: '$(Build.SourcesDirectory)/slackernews'
        tags: '2h'
    - task: Docker@2
      displayName: Build Web image
      inputs:
        containerRegistry: 'ttl.sh'
        repository: 'slackernews-nginx'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '2h'

- stage: Release
  displayName: Release
  jobs:
  - job: build
    displayName: Build images
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: HelmInstaller@0
      displayName: Install Helm CLI
      inputs:
        helmVersion: '2.14.1'
        installKubectl: false 
    - task: Bash@3
      displayName: Package Helm chart
      inputs:
        targetType: 'inline'
        script: |
          cd chart/slackernews && \
            helm dep up --debug && \
            cd .. && \
            helm package \
              --app-version=1.0.0 \
              --version=1.0.0 \
              ./slackernews
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'charts'
        Contents: 'slackernews*.tgz'
        TargetFolder: 'kots'
    - task: Bash@3
      displayName: Install Replicated CLI
      inputs:
        targetType: 'inline'
        script: |
          curl -sSL https://raw.githubusercontent.com/replicatedhq/replicated/master/install.sh | \
            bash          
    - task: Bash@3
      displayName: Create Release
      inputs:
        targetType: 'inline'
        script: |
          replicated release create --yaml-dir ./kots