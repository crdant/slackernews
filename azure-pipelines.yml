# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- demo

resources:
- repo: self

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: build
    displayName: Build images
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build Web image
      inputs:
        command: buildAndPush    
        containerRegistry: 'ttl.sh'
        repository: 'crdant/slackernews/slackernews-web'
        dockerfile: '$(Build.SourcesDirectory)/deploy/Dockerfile.web'
        buildContext: '$(Build.SourcesDirectory)/slackernews'
        tags: '2h'
    - task: Docker@2
      displayName: Build NGINX image
      inputs:
        containerRegistry: 'ttl.sh'
        repository: 'crdant/slackernews/slackernews-nginx'
        command: 'buildAndPush'
        dockerfile: '$(Build.SourcesDirectory)/deploy/Dockerfile.nginx'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '2h'

- stage: Package
  displayName: Package
  jobs:
  - job: build
    displayName: Package Helm chart
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: HelmInstaller@0
      displayName: Install Helm CLI
      inputs:
        helmVersion: '2.14.1'
        installKubectl: false 
    - task: Bash@3
      displayName: Package Helm chart
      inputs:
        targetType: 'inline'
        script: |
          cd chart/slackernews && \
            helm dep up --debug && \
            cd .. && \
            helm package \
              --app-version=1.0.0 \
              --version=1.0.0 \
              ./slackernews
    - task: CopyFiles@2
      displayName: Stage Helm chart artifact
      inputs:
        SourceFolder: 'chart'
        Contents: 'slackernews*.tgz'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'package'
        publishLocation: 'Container'

- stage: SmokeTest
  displayName: Smoke Test
  jobs:
  - job: prepare
    displayName: Prepare runner
    steps:
    - task: Bash@3
      displayName: Install Replicated CLI
      inputs:
        targetType: 'inline'
        script: |
          curl -sSL https://raw.githubusercontent.com/replicatedhq/replicated/master/install.sh | \
            bash
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: current
        artifactName: package
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: CopyFiles@2
      displayName: Stage Helm chart artifact
      inputs:
        SourceFolder: '$(System.ArtifactsDirectory)'
        Contents: 'slackernews*.tgz'
        TargetFolder: '$(Build.SourcesDirectory)/kots'  
  
  - job: clusters
    displayName: Prepare Test Clusters
    dependsOn: prepare 
    strategy:
      matrix:
        k3s_1_26:
          distribution: k3s
          version: 1.26
        k3s_1_27:
          distribution: k3s
          version: 1.27
        k3s_1_28:
          distribution: k3s
          version: 1.28
    steps:
    - task: CopyFiles@2
      displayName: Stage Helm chart artifact
      inputs:
        SourceFolder: 'packages'
        Contents: 'slackernews*.tgz'
        TargetFolder: '$(Build.SourcesDirectory)/kots'     
    - task: Bash@3
      displayName: Prepare Cluster
      inputs:
        targetType: 'inline'
        script: |
          replicated cluster prepare --name ${DISTRIBUTION}-${VERSION}-${BUILD} --distribution ${DISTRIBUTION} --version ${VERSION} --yaml-dir ${SOURCE_DIRECTORY}/kots
      env:
        REPLICATED_API_TOKEN: $(ApiToken)
        REPLICATED_APP: $(AppSlug)
        DISTRIBUTION: $(distribution)
        VERSION: $(version)
        SOURCE_DIRECTORY: $(Build.SourcesDirectory)
        BUILD: $(Build.BuildId)
  - job: test
    displayName: Run tests
    dependsOn: clusters
    strategy:
      matrix:
        k3s_1_26:
          distribution: k3s
          version: 1.26
        k3s_1_27:
          distribution: k3s
          version: 1.27
        k3s_1_28:
          distribution: k3s
          version: 1.28
    steps:
    - task: Bash@3
      displayName: Get Cluster Configuration
      inputs:
        targetType: 'inline'
        script: |
          replicated cluster kubeconfig --name ${DISTRIBUTION}-${VERSION}-${BUILD} > ./kubeconfig
      env:
        REPLICATED_API_TOKEN: $(ApiToken)
        REPLICATED_APP: $(AppSlug)
        DISTRIBUTION: $(distribution)
        VERSION: $(version)
        BUILD: $(Build.BuildId)
    - task: Bash@3
      displayName: Test
      inputs:
        targetType: 'inline'
        script: |
          echo "Do your testing here"

- stage: Release
  displayName: Release
  jobs:
  - job: prepare
    displayName: Prepare for release
    steps:
    - task: Bash@3
      displayName: Install Replicated CLI
      inputs:
        targetType: 'inline'
        script: |
          curl -sSL https://raw.githubusercontent.com/replicatedhq/replicated/master/install.sh | \
            bash
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: current
        artifactName: package
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: CopyFiles@2
      displayName: Stage Helm chart artifact
      inputs:
        SourceFolder: '$(System.ArtifactsDirectory)'
        Contents: 'slackernews*.tgz'
        TargetFolder: '$(Build.SourcesDirectory)/kots'  
  - job: release
    displayName: Release Application
    steps:
    - task: Bash@3
      displayName: Create release
      inputs:
        targetType: 'inline'
        script: |
          replicated release create --yaml-dir ${SOURCE_DIRECTORY}/kots
      env:
        REPLICATED_API_TOKEN: $(ApiToken)
        REPLICATED_APP: $(AppSlug)